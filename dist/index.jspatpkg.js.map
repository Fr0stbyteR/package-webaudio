{"version":3,"file":"index.jspatpkg.js","mappings":"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","sources":["webpack://@jspatcher/package-webaudio/./src/index.ts","webpack://@jspatcher/package-webaudio/./src/objects/Analyser.ts","webpack://@jspatcher/package-webaudio/./src/objects/AnyNode.ts","webpack://@jspatcher/package-webaudio/./src/objects/AudioIn.ts","webpack://@jspatcher/package-webaudio/./src/objects/AudioOut.tsx","webpack://@jspatcher/package-webaudio/./src/objects/Biquad.ts","webpack://@jspatcher/package-webaudio/./src/objects/BufferSource.ts","webpack://@jspatcher/package-webaudio/./src/objects/Compressor.ts","webpack://@jspatcher/package-webaudio/./src/objects/Constant.ts","webpack://@jspatcher/package-webaudio/./src/objects/Convolver.ts","webpack://@jspatcher/package-webaudio/./src/objects/Delay.ts","webpack://@jspatcher/package-webaudio/./src/objects/Destination.ts","webpack://@jspatcher/package-webaudio/./src/objects/Gain.ts","webpack://@jspatcher/package-webaudio/./src/objects/IIRFilter.ts","webpack://@jspatcher/package-webaudio/./src/objects/Media.ts","webpack://@jspatcher/package-webaudio/./src/objects/Merger.ts","webpack://@jspatcher/package-webaudio/./src/objects/Oscillator.ts","webpack://@jspatcher/package-webaudio/./src/objects/Panner.ts","webpack://@jspatcher/package-webaudio/./src/objects/Splitter.ts","webpack://@jspatcher/package-webaudio/./src/objects/StereoPanner.ts","webpack://@jspatcher/package-webaudio/./src/objects/StreamDestination.ts","webpack://@jspatcher/package-webaudio/./src/objects/StreamSource.ts","webpack://@jspatcher/package-webaudio/./src/objects/WaveShaper.ts","webpack://@jspatcher/package-webaudio/./src/objects/audioContext.ts","webpack://@jspatcher/package-webaudio/./src/objects/audioWorklet.ts","webpack://@jspatcher/package-webaudio/./src/objects/base.ts","webpack://@jspatcher/package-webaudio/./src/package-info.ts","webpack://@jspatcher/package-webaudio/./src/sdk.ts","webpack://@jspatcher/package-webaudio/./src/utils.ts","webpack://@jspatcher/package-webaudio/webpack/bootstrap","webpack://@jspatcher/package-webaudio/webpack/runtime/create fake namespace object","webpack://@jspatcher/package-webaudio/webpack/runtime/define property getters","webpack://@jspatcher/package-webaudio/webpack/runtime/hasOwnProperty shorthand","webpack://@jspatcher/package-webaudio/webpack/runtime/make namespace object","webpack://@jspatcher/package-webaudio/./src/index.jspatpkg.ts"],"sourcesContent":["import packageInfo from \"./package-info\";\r\nimport type { IExternalPackage } from \"@jspatcher/jspatcher/src/core/GlobalPackageManager\";\r\n\r\nexport const name = packageInfo.name.split(\"/\").pop().replace(/^package-/, '');\r\n\r\nexport const { author, license, keywords, version, description, jspatcher } = packageInfo;\r\n\r\nexport default { name, author, license, keywords, version, description, ...jspatcher } as IExternalPackage;","import WebAudioObject from \"./base\";\r\nimport { Bang, isBang } from \"../sdk\";\r\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\ninterface P {\r\n    fftSize: 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16384 | 32768;\r\n    minDecibels: number;\r\n    maxDecibels: number;\r\n    smoothingTimeConstant: number;\r\n};\r\ntype I = [Bang, Float32Array, Uint8Array, Float32Array, Uint8Array, Partial<P>];\r\ntype O = [null, Float32Array, Uint8Array, Float32Array, Uint8Array, AnalyserNode];\r\nexport default class Analyser extends WebAudioObject<AnalyserNode, {}, I, O, [], P> {\r\n    static description = \"WebAudio AnalyserNode\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"signal\",\r\n        description: \"Node connection, bang to output AnalyserNode instance\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"getFloatTimeDomainData(): Float32Array\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"getByteTimeDomainData(): Uint8Array\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"getFloatFrequencyData(): Float32Array\"\r\n    }, {\r\n        isHot: true,\r\n        type: \"object\",\r\n        description: \"getByteFrequencyData(): Uint8Array\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"object\",\r\n        description: \"Options: { fftSize, minDecibels, maxDecibels, smoothingTimeConstant }\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"signal\",\r\n        description: \"Node connection\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"getFloatTimeDomainData result\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"getByteTimeDomainData result\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"getFloatFrequencyData result\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"getByteFrequencyData result\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"Instance: AnalyserNode\"\r\n    }];\r\n    static props: IPropsMeta<P> = {\r\n        fftSize: {\r\n            type: \"number\",\r\n            default: 2048,\r\n            description: \"The size of the FFT to be used: power of 2\"\r\n        },\r\n        minDecibels: {\r\n            type: \"number\",\r\n            default: -100,\r\n            description: \"The minimum power value in the scaling range for the FFT analysis data\"\r\n        },\r\n        maxDecibels: {\r\n            type: \"number\",\r\n            default: -10,\r\n            description: \"The maximum power value in the scaling range for the FFT analysis data\"\r\n        },\r\n        smoothingTimeConstant: {\r\n            type: \"number\",\r\n            default: 0.8,\r\n            description: \"The averaging constant with the last analysis frame\"\r\n        }\r\n    };\r\n    _ = { node: this.audioCtx.createAnalyser() };\r\n    inletAudioConnections = [{ node: this.node, index: 0 }];\r\n    outletAudioConnections = [{ node: this.node, index: 0 }];\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 6;\r\n            this.outlets = 6;\r\n            this.node.channelInterpretation = \"discrete\";\r\n            handleProps(this.box.props);\r\n        });\r\n        const handleProps = (props: Partial<P>) => {\r\n            try {\r\n                if (typeof props.fftSize === \"number\") this.node.fftSize = props.fftSize;\r\n                if (typeof props.minDecibels === \"number\") this.node.minDecibels = props.minDecibels;\r\n                if (typeof props.maxDecibels === \"number\") this.node.maxDecibels = props.maxDecibels;\r\n                if (typeof props.smoothingTimeConstant === \"number\") this.node.smoothingTimeConstant = props.smoothingTimeConstant;\r\n            } catch (e) {\r\n                this.error((e as Error).message);\r\n            }\r\n        };\r\n        this.on(\"updateProps\", handleProps);\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (isBang(data)) this.outlet(5, this.node);\r\n            } else if (inlet === 5) {\r\n                if (typeof data === \"object\") {\r\n                    const props = data as I[5];\r\n                    try {\r\n                        if (typeof props.fftSize === \"number\") this.node.fftSize = props.fftSize;\r\n                        if (typeof props.minDecibels === \"number\") this.node.minDecibels = props.minDecibels;\r\n                        if (typeof props.maxDecibels === \"number\") this.node.maxDecibels = props.maxDecibels;\r\n                        if (typeof props.smoothingTimeConstant === \"number\") this.node.smoothingTimeConstant = props.smoothingTimeConstant;\r\n                    } catch (e) {\r\n                        this.error((e as Error).message);\r\n                    }\r\n                } else {\r\n                    this.error(\"Invalid options\");\r\n                }\r\n            } else {\r\n                try {\r\n                    if (inlet === 1) {\r\n                        this.node.getFloatTimeDomainData(data as I[1]);\r\n                        this.outlet(1, data as I[1]);\r\n                    } else if (inlet === 2) {\r\n                        this.node.getByteTimeDomainData(data as I[2]);\r\n                        this.outlet(2, data as I[2]);\r\n                    } else if (inlet === 3) {\r\n                        this.node.getFloatFrequencyData(data as I[3]);\r\n                        this.outlet(3, data as I[3]);\r\n                    } else if (inlet === 4) {\r\n                        this.node.getByteFrequencyData(data as I[4]);\r\n                        this.outlet(4, data as I[4]);\r\n                    }\r\n                } catch (e) {\r\n                    this.error((e as Error).message);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import WebAudioObject from \"./base\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class AnyNode extends WebAudioObject<AudioNode, {}, [AudioNode, ...null[]], null[]> {\n    static description = \"WebAudio AudioNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, AudioNode instance to set the node.\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"Node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }];\n    _ = { node: undefined as AudioNode };\n    handleInlet = ({ data, inlet }: { data: any; inlet: number }) => {\n        if (inlet === 0) {\n            try {\n                if (data instanceof AudioNode) {\n                    this.disconnectAudio();\n                    this._.node = data;\n                    const inlets = this.node.numberOfInputs || 1;\n                    const outlets = this.node.numberOfOutputs;\n                    const factoryMeta = AnyNode.meta as this[\"meta\"];\n                    const inlet0 = factoryMeta.inlets[0];\n                    const inlet1 = factoryMeta.inlets[1];\n                    const outlet0 = factoryMeta.inlets[0];\n                    this.inletAudioConnections = [{ node: this.node, index: 0 }];\n                    factoryMeta.inlets = [inlet0];\n                    for (let i = 1; i < inlets; i++) {\n                        factoryMeta.inlets[i] = inlet1;\n                    }\n                    for (let i = 0; i < outlets; i++) {\n                        factoryMeta.outlets[i] = outlet0;\n                    }\n                    for (let i = 0; i < this.node.numberOfInputs; i++) {\n                        this.inletAudioConnections[i] = { node: this.node, index: i };\n                    }\n                    for (let i = 0; i < this.node.numberOfOutputs; i++) {\n                        this.outletAudioConnections[i] = { node: this.node, index: i };\n                    }\n                    this.setMeta(factoryMeta);\n                    this.inlets = inlets;\n                    this.outlets = outlets;\n                    this.connectAudio();\n                }\n            } catch (e) {\n                this.error((e as Error).message);\n                return this;\n            }\n        }\n        return this;\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"inlet\", this.handleInlet);\n    }\n}\n","import { Bang, isBang } from \"../sdk\";\r\nimport WebAudioObject from \"./base\";\r\nimport type { IArgsMeta, IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport interface Constraints extends MediaTrackConstraintSet {\r\n    deviceId: string;\r\n    autoGainControl: boolean;\r\n    channelCount: number;\r\n    echoCancellation: boolean;\r\n    latency: number;\r\n    noiseSuppression: boolean;\r\n    sampleRate: number;\r\n    sampleSize: number;\r\n}\r\nexport default class AudioIn extends WebAudioObject<MediaStreamAudioSourceNode, { search: string; stream: MediaStream }, [string | Bang], [null, MediaStreamAudioSourceNode], [string], Constraints> {\r\n    static description = \"Get Audio input from device name or ID\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"string to fetch device name or ID, bang to output Node\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"signal\",\r\n        description: \"Node connection\"\r\n    }, {\r\n        type: \"object\",\r\n        description: \"Instance: MediaStreamAudioSourceNode\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"string\",\r\n        optional: false,\r\n        description: \"Device name or ID\"\r\n    }];\r\n    static props: IPropsMeta<Omit<Constraints, \"deviceId\">> = {\r\n        autoGainControl: {\r\n            type: \"boolean\",\r\n            default: false,\r\n            description: \"Automatic gain control\"\r\n        },\r\n        channelCount: {\r\n            type: \"number\",\r\n            default: undefined,\r\n            description: \"The number of independent channels of sound\"\r\n        },\r\n        echoCancellation: {\r\n            type: \"boolean\",\r\n            default: false,\r\n            description: \"Remove all the sound being played from the input signals recorded by the microphones\"\r\n        },\r\n        latency: {\r\n            type: \"number\",\r\n            default: undefined,\r\n            description: \"The latency or latency range, in seconds\"\r\n        },\r\n        noiseSuppression: {\r\n            type: \"boolean\",\r\n            default: false,\r\n            description: \"Noise suppression\"\r\n        },\r\n        sampleRate: {\r\n            type: \"number\",\r\n            default: undefined,\r\n            description: \"The sample rate in samples per second for the audio data\"\r\n        },\r\n        sampleSize: {\r\n            type: \"number\",\r\n            default: undefined,\r\n            description: \"The linear sample size in bits\"\r\n        }\r\n    };\r\n    _ = { node: undefined as MediaStreamAudioSourceNode, stream: undefined as MediaStream, search: undefined as string };\r\n    handleDeviceChange = async () => {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const enums = devices.filter(d => d.kind === \"audioinput\").map(d => d.label || d.deviceId);\r\n        const { meta } = this;\r\n        meta.args[0] = { ...AudioIn.args[0], type: \"enum\", enums };\r\n        this.setMeta(meta);\r\n    };\r\n    newSearch = async (search?: string) => {\r\n        this._.search = search;\r\n        let deviceId: string;\r\n        if (search) {\r\n            const devices = await navigator.mediaDevices.enumerateDevices();\r\n            const device = devices.find(d => d.kind === \"audioinput\" && (d.deviceId === search || d.label === search));\r\n            if (device) deviceId = device.deviceId;\r\n        }\r\n        this._.stream = await navigator.mediaDevices.getUserMedia({ audio: this.getConstraints(deviceId) });\r\n        if (this._.stream) this.resetNode();\r\n    };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 2;\r\n        });\r\n        this.on(\"postInit\", () => {\r\n            const search = this.box.args[0];\r\n            navigator.mediaDevices.addEventListener(\"devicechange\", this.handleDeviceChange);\r\n            this.handleDeviceChange();\r\n            this.newSearch(search);\r\n        });\r\n        this.on(\"updateArgs\", (args: [string?]) => {\r\n            this.newSearch(args[0]);\r\n        });\r\n        this.on(\"updateProps\", () => {\r\n            this.newSearch(this._.search);\r\n        });\r\n        this.on(\"inlet\", async ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    await this.newSearch(data);\r\n                }\r\n                if (this.node) this.outlet(1, this.node);\r\n            }\r\n        });\r\n        this.on(\"destroy\", () => {\r\n            navigator.mediaDevices.removeEventListener(\"devicechange\", this.handleDeviceChange);\r\n        });\r\n    }\r\n    getConstraints(deviceId?: string): Constraints {\r\n        return {\r\n            deviceId,\r\n            autoGainControl: this.getProp(\"autoGainControl\"),\r\n            channelCount: this.getProp(\"channelCount\"),\r\n            echoCancellation: this.getProp(\"echoCancellation\"),\r\n            latency: this.getProp(\"latency\"),\r\n            noiseSuppression: this.getProp(\"noiseSuppression\"),\r\n            sampleRate: this.getProp(\"sampleRate\"),\r\n            sampleSize: this.getProp(\"sampleSize\")\r\n        };\r\n    }\r\n    resetNode() {\r\n        this.disconnectAudio();\r\n        if (this._.stream) {\r\n            this.node = this.audioCtx.createMediaStreamSource(this._.stream);\r\n            this.node.channelInterpretation = \"discrete\";\r\n        }\r\n        this.outletAudioConnections[0] = { node: this.node, index: 0 };\r\n        this.connectAudio();\r\n    }\r\n}\r\n","import { React, Bang, DefaultUI, isBang } from \"../sdk\";\r\nimport WebAudioObject from \"./base\";\r\nimport AudioIn, { Constraints } from \"./AudioIn\";\r\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nconst supportSetSinkId = window.MediaStreamAudioDestinationNode && HTMLMediaElement.prototype.setSinkId;\r\nexport default class AudioOut extends WebAudioObject<MediaStreamAudioDestinationNode | AudioDestinationNode, { search?: string; audio?: HTMLAudioElement; msadn?: MediaStreamAudioDestinationNode }, [string | Bang], [null, MediaStreamAudioDestinationNode | AudioDestinationNode], [string], Constraints> {\r\n    static description = \"Get Audio output from device name or ID (if supported)\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"signal\",\r\n        description: \"Node connection, string to fetch device name or ID, bang to output Node\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"object\",\r\n        description: `Instance: ${supportSetSinkId ? \"MediaStreamAudioDestinationNode | \" : \"\"}AudioDestinationNode`\r\n    }];\r\n    static args = supportSetSinkId ? AudioIn.args : [];\r\n    static props = supportSetSinkId ? AudioIn.props : {};\r\n    static UI = supportSetSinkId ? class AudioOutUI extends DefaultUI<AudioOut> {\r\n        refContainer = React.createRef<HTMLDivElement>();\r\n        componentDidMount() {\r\n            super.componentDidMount();\r\n            const div = this.refContainer.current;\r\n            const { audio } = this.object._;\r\n            if (div && audio) {\r\n                audio.style.display = \"none\";\r\n                div.appendChild(audio);\r\n            }\r\n        }\r\n        render() {\r\n            const textContainerProps = { ...this.props.textContainerProps, ref: this.refContainer };\r\n            return (\r\n                <DefaultUI textContainerProps={textContainerProps} {...this.props} />\r\n            );\r\n        }\r\n    } : DefaultUI;\r\n    _ = supportSetSinkId ? { node: this.audioCtx.destination, msadn: this.audioCtx.createMediaStreamDestination(), audio: new Audio(), search: undefined as string } : { node: this.audioCtx.destination };\r\n    inletAudioConnections = [{ node: this.node, index: 0 }];\r\n    handleDeviceChange = async () => {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const enums = devices.filter(d => d.kind === \"audiooutput\").map(d => d.label || d.deviceId);\r\n        const { meta } = this;\r\n        meta.args[0] = { ...AudioOut.args[0], type: \"enum\", enums };\r\n        this.setMeta(meta);\r\n    };\r\n    newSearch = async (search?: string) => {\r\n        if (!supportSetSinkId) return;\r\n        this._.search = search;\r\n        if (!search || search === \"default\") {\r\n            this.resetNode();\r\n            return;\r\n        }\r\n        const { audio } = this._;\r\n        let deviceId = audio.sinkId || \"default\";\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const device = devices.find(d => d.kind === \"audiooutput\" && (d.deviceId === search || d.label === search));\r\n        if (device) deviceId = device.deviceId;\r\n        if (audio.sinkId !== deviceId) {\r\n            if (audio.played) audio.pause();\r\n            audio.setSinkId(deviceId);\r\n            audio.play();\r\n        }\r\n        this.resetNode(true);\r\n    };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"postInit\", () => {\r\n            this.node.channelInterpretation = \"discrete\";\r\n            if (supportSetSinkId) {\r\n                this._.msadn.channelInterpretation = \"discrete\";\r\n                const { audio, msadn } = this._;\r\n                const { stream } = msadn;\r\n                if (\"srcObject\" in audio) audio.srcObject = stream;\r\n                else (audio as HTMLAudioElement).src = URL.createObjectURL(stream);\r\n                const search = this.box.args[0];\r\n                navigator.mediaDevices.addEventListener(\"devicechange\", this.handleDeviceChange);\r\n                this.on(\"destroy\", () => {\r\n                    navigator.mediaDevices.removeEventListener(\"devicechange\", this.handleDeviceChange);\r\n                });\r\n                this.handleDeviceChange();\r\n                this.newSearch(search);\r\n            }\r\n        });\r\n        this.on(\"updateArgs\", (args: [string]) => {\r\n            this.newSearch(args[0]);\r\n        });\r\n        this.on(\"updateProps\", () => {\r\n            this.newSearch(this._.search);\r\n        });\r\n        this.on(\"inlet\", async ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    await this.newSearch(data);\r\n                }\r\n                if (this.node) this.outlet(1, this.node);\r\n            }\r\n        });\r\n    }\r\n    getConstraints(deviceId?: string): Constraints {\r\n        return {\r\n            deviceId,\r\n            autoGainControl: this.getProp(\"autoGainControl\"),\r\n            channelCount: this.getProp(\"channelCount\"),\r\n            echoCancellation: this.getProp(\"echoCancellation\"),\r\n            latency: this.getProp(\"latency\"),\r\n            noiseSuppression: this.getProp(\"noiseSuppression\"),\r\n            sampleRate: this.getProp(\"sampleRate\"),\r\n            sampleSize: this.getProp(\"sampleSize\")\r\n        };\r\n    }\r\n    resetNode(msadn?: boolean) {\r\n        if (msadn) {\r\n            if (this.node !== this._.msadn) {\r\n                this.disconnectAudio();\r\n                this.node = this._.msadn;\r\n                this.inletAudioConnections[0] = { node: this.node, index: 0 };\r\n                this.connectAudio();\r\n            }\r\n        } else {\r\n            if (this.node !== this.audioCtx.destination) {\r\n                this.disconnectAudio();\r\n                this.node = this.audioCtx.destination;\r\n                this.inletAudioConnections[0] = { node: this.node, index: 0 };\r\n                this.connectAudio();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang, TBPF, TBPF, TBPF, TBPF, BiquadFilterType];\nexport default class Biquad extends WebAudioObject<BiquadFilterNode, {}, I, [null, BiquadFilterNode], [], BiquadFilterOptions> {\n    static description = \"WebAudio BiquadFilterNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection (1 channel), bang to output BiquadFilterNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"frequency: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"detune: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"Q: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"gain: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"enum\",\n        enums: [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"peaking\", \"notch\", \"allpass\"],\n        description: 'type: \"lowpass\" | \"highpass\" | \"bandpass\" | \"lowshelf\" | \"highshelf\" | \"peaking\" | \"notch\" | \"allpass\"'\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (1 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: BiquadFilterNode\"\n    }];\n    static props: IPropsMeta<BiquadFilterOptions> = {\n        frequency: {\n            type: \"number\",\n            default: 350,\n            description: \"Initial frequency\"\n        },\n        detune: {\n            type: \"number\",\n            default: 100,\n            description: \"Initial detune\"\n        },\n        Q: {\n            type: \"number\",\n            default: 100,\n            description: \"Initial Q\"\n        },\n        gain: {\n            type: \"number\",\n            default: 25,\n            description: \"Initial gain\"\n        },\n        type: {\n            type: \"enum\",\n            enums: [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"peaking\", \"notch\", \"allpass\"],\n            default: \"lowpass\",\n            description: 'Initial type: \"lowpass\" | \"highpass\" | \"bandpass\" | \"lowshelf\" | \"highshelf\" | \"peaking\" | \"notch\" | \"allpass\"'\n        }\n    };\n    static isBiquadFilterType = (x: any): x is BiquadFilterType => [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"peaking\", \"notch\", \"allpass\"].indexOf(x) >= 0;\n    _ = { node: this.audioCtx.createBiquadFilter() };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.frequency }, { node: this.node.detune }, { node: this.node.Q }, { node: this.node.gain }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 6;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleProps(this.box.props);\n        });\n        const handleProps =  (props: Partial<BiquadFilterOptions>) => {\n            const paramMap = [\"frequency\", \"detune\", \"Q\", \"gain\"] as const;\n            paramMap.forEach((key) => {\n                try {\n                    if (typeof props[key] === \"number\") this.node[key].setValueAtTime(props[key], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            });\n            if (typeof props.type === \"string\") {\n                try {\n                    this.node.type = props.type;\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        }\n        this.on(\"updateProps\", handleProps);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            const paramMap = [\"frequency\", \"detune\", \"Q\", \"gain\"] as const;\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 5) {\n                if (Biquad.isBiquadFilterType(data)) this.node.type = data;\n            } else if (inlet > 0 && inlet < 5) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node[paramMap[inlet - 1]], bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang, PatcherAudio } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang | boolean | number | PatcherAudio | AudioBuffer, TBPF, TBPF, boolean, number, number];\ninterface P extends Omit<Required<AudioBufferSourceOptions>, \"buffer\"> {}\ninterface S {\n    node: AudioBufferSourceNode;\n    playing: boolean;\n}\n\nexport default class BufferSrc extends WebAudioObject<AudioBufferSourceNode, S, I, [null, Bang, AudioBufferSourceNode], [], P> {\n    static description = \"WebAudio AudioBufferSourceNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"anything\",\n        description: \"Bang to output AudioBufferSourceNode instance, boolean/number to start/stop, AudioBuffer/PatcherAudio to set buffer\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"playbackRate: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"detune: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"boolean\",\n        description: \"loop\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"loopStart (seconds)\"\n    }, {\n        isHot: false,\n        type: \"number\",\n        description: \"loopEnd (seconds)\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: AudioBufferSourceNode\"\n    }];\n    static props: IPropsMeta<P> = {\n        detune: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial detune, detuning of playback in cents\"\n        },\n        playbackRate: {\n            type: \"number\",\n            default: 1,\n            description: \"Initial playbackRate, The speed at which to render the audio stream\"\n        },\n        loop: {\n            type: \"boolean\",\n            default: false,\n            description: \"Initial loop, Indicates if the region of audio data designated by loopStart and loopEnd should be played continuously in a loop\"\n        },\n        loopStart: {\n            type: \"number\",\n            default: 0,\n            description: \"An optional playhead position where looping should begin if the loop attribute is true. If <=0 or > duration, loop will end at the end of the buffer.\"\n        },\n        loopEnd: {\n            type: \"number\",\n            default: 0,\n            description: \"An optional playhead position where looping should end if the loop attribute is true. If <=0 or > duration, loop will end at the end of the buffer.\"\n        }\n    };\n    _: S = { node: this.audioCtx.createBufferSource(), playing: false };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.playbackRate }, { node: this.node.detune }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    handleEnded = () => {\n        this.outlet(1, new Bang());\n        this.resetNode();\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 6;\n            this.outlets = 2;\n            this.node.addEventListener(\"ended\", this.handleEnded);\n            handleProps(this.box.props);\n        });\n        const handleProps = (props: Partial<P>) => {\n            const paramMap = [\"playbackRate\", \"detune\"] as const;\n            const numberParamMap = [\"loopStart\", \"loopEnd\"] as const;\n            const booleanParamMap = [\"loop\"] as const;\n            try {\n                paramMap.forEach((key) => {\n                    if (typeof props[key] === \"number\") this.node[key].setValueAtTime(props[key], this.audioCtx.currentTime);\n                });\n                numberParamMap.forEach((key) => {\n                    if (typeof props[key] === \"number\") this.node[key] = props[key];\n                });\n                booleanParamMap.forEach((key) => {\n                    if (typeof props[key] === \"boolean\") this.node[key] = props[key];\n                });\n            } catch (e) {\n                this.error(e.message);\n            }\n        }\n        this.on(\"updateProps\", handleProps);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            const paramMap = [\"playbackRate\", \"detune\"] as const;\n            if (inlet === 0) {\n                if (isBang(data)) {\n                    this.outlet(2, this.node);\n                } else if (typeof data === \"boolean\" || typeof data === \"number\") {\n                    if (data) {\n                        if (!this._.playing) {\n                            this.node.start();\n                            this._.playing = true;\n                        }\n                    } else {\n                        if (this._.playing) {\n                            this.node.stop();\n                            this.resetNode();\n                        }\n                    }\n                } else if (data instanceof AudioBuffer) {\n                    if (data !== this.node.buffer) this.resetNode(data);\n                } else if (data instanceof PatcherAudio) {\n                    if (data.audioBuffer !== this.node.buffer) this.resetNode(data.audioBuffer);\n                }\n            } else if (inlet >= 1 && inlet <= 2) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node[paramMap[inlet - 1]], bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            } else if (inlet === 3) {\n                if (typeof data === \"boolean\") {\n                    try {\n                        this.node.loop = data;\n                    } catch (e) {\n                        this.error(e.message);\n                    }\n                }\n            } else if (inlet > 3) {\n                if (typeof data === \"number\") {\n                    try {\n                        if (inlet === 4) this.node.loopStart = data;\n                        else if (inlet === 5) this.node.loopEnd = data;\n                    } catch (e) {\n                        this.error(e.message);\n                    }\n                }\n            }\n        });\n        this.on(\"destroy\", () => {\n            if (this._.playing) this.node.stop();\n            this.node.removeEventListener(\"ended\", this.handleEnded);\n        });\n    }\n    resetNode(bufferIn?: AudioBuffer) {\n        this.disconnectAudio();\n        this._.playing = false;\n        this.node.removeEventListener(\"ended\", this.handleEnded);\n        const { loop, loopStart, loopEnd } = this.node;\n        const buffer = bufferIn || this.node.buffer;\n        const playbackRate = this.node.playbackRate.value;\n        const detune = this.node.detune.value;\n        this.node = this.audioCtx.createBufferSource();\n        this.node.buffer = buffer;\n        this.node.loop = loop;\n        this.node.loopStart = loopStart;\n        this.node.loopEnd = loopEnd;\n        this.node.playbackRate.setValueAtTime(playbackRate, this.audioCtx.currentTime);\n        this.node.detune.setValueAtTime(detune, this.audioCtx.currentTime);\n        this.node.addEventListener(\"ended\", this.handleEnded);\n        this.inletAudioConnections[0] = { node: this.node, index: 0 };\n        this.inletAudioConnections[1] = { node: this.node.playbackRate };\n        this.inletAudioConnections[2] = { node: this.node.detune };\n        this.outletAudioConnections[0] = { node: this.node, index: 0 };\n        this.connectAudio();\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang, TBPF, TBPF, TBPF, TBPF, TBPF];\nexport default class Compressor extends WebAudioObject<DynamicsCompressorNode, {}, I, [null, DynamicsCompressorNode], [], DynamicsCompressorOptions> {\n    static description = \"WebAudio DynamicsCompressorNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection (1 channel), bang to output DynamicsCompressorNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"threshold: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"knee: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"ratio: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"attack: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"release: bpf or node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (1 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: DynamicsCompressorNode\"\n    }];\n    static props: IPropsMeta<DynamicsCompressorOptions> = {\n        threshold: {\n            type: \"number\",\n            default: -24,\n            description: \"Initial threshold\"\n        },\n        knee: {\n            type: \"number\",\n            default: 30,\n            description: \"Initial knee\"\n        },\n        ratio: {\n            type: \"number\",\n            default: 12,\n            description: \"Initial ratio\"\n        },\n        attack: {\n            type: \"number\",\n            default: 0.003,\n            description: \"Initial attack\"\n        },\n        release: {\n            type: \"number\",\n            default: 0.25,\n            description: \"Initial release\"\n        }\n    };\n    _ = { node: this.audioCtx.createDynamicsCompressor() };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.threshold }, { node: this.node.knee }, { node: this.node.ratio }, null, { node: this.node.attack }, { node: this.node.release }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 6;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleProps(this.box.props);\n        });\n        const handleProps = (props: Partial<DynamicsCompressorOptions>) => {\n            const paramMap = [\"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"] as const;\n            paramMap.forEach((key) => {\n                try {\n                    if (typeof props[key] === \"number\") this.node[key].setValueAtTime(props[key], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            });\n        }\n        this.on(\"updateProps\", handleProps);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            const paramMap = [\"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"] as const;\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet > 0 && inlet < 6) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node[paramMap[inlet - 1]], bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Constant extends WebAudioObject<ConstantSourceNode, {}, [Bang, TBPF], [null, ConstantSourceNode], [number]> {\n    static description = \"WebAudio ConstantSourceNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Output ConstantSourceNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"offset: bpf or node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (1 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: ConstantSourceNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        description: \"Initial offset\",\n        default: 1\n    }];\n    _ = { node: this.audioCtx.createConstantSource() };\n    inletAudioConnections = [null, { node: this.node.offset }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleArgs(this.args);\n            this.node.start();\n        });\n        const handleArgs = (args: [number?]) => {\n            if (typeof args[0] === \"number\") {\n                try {\n                    this.node.offset.setValueAtTime(args[0], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        }\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node.offset, bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang, PatcherAudio } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang, AudioBuffer | PatcherAudio, boolean];\ntype O = [null, ConvolverNode];\ninterface P {\n    normalize: boolean;\n}\n\nexport default class Convolver extends WebAudioObject<ConvolverNode, {}, I, O, [], P> {\n    static description = \"WebAudio ConvolverNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output ConvolverNode instance\"\n    }, {\n        isHot: true,\n        type: \"object\",\n        description: \"buffer (2-4 channels): AudioBuffer\"\n    }, {\n        isHot: true,\n        type: \"boolean\",\n        description: \"normalize: boolean\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (2-4 channels)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: ConvolverNode\"\n    }];\n    static props: IPropsMeta<P> = {\n        normalize: {\n            type: \"boolean\",\n            default: true,\n            description: \"Controls whether the impulse response from the buffer will be scaled by an equal-power normalization\"\n        }\n    };\n    _ = { node: this.audioCtx.createConvolver() };\n    inletAudioConnections = [{ node: this.node, index: 0 }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 3;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleProps(this.box.props);\n        });\n        const handleProps = (props: Partial<P>) => {\n            try {\n                if (typeof props.normalize === \"boolean\") this.node.normalize = props.normalize;\n            } catch (e) {\n                this.error((e as Error).message);\n            }\n        }\n        this.on(\"updateProps\", handleProps);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                if (data instanceof AudioBuffer) {\n                    try {\n                        this.node.buffer = data;\n                    } catch (e) {\n                        this.error((e as Error).message);\n                    }\n                } else if (data instanceof PatcherAudio) {\n                    try {\n                        this.node.buffer = data.audioBuffer;\n                    } catch (e) {\n                        this.error((e as Error).message);\n                    }\n                } else {\n                    this.error(\"Invalid ArrayBuffer\");\n                }\n            } else if (inlet === 2) {\n                if (typeof data === \"boolean\") {\n                    try {\n                        this.node.normalize = data;\n                    } catch (e) {\n                        this.error((e as Error).message);\n                    }\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Delay extends WebAudioObject<DelayNode, {}, [Bang, TBPF], [null, DelayNode], [number]> {\n    static description = \"WebAudio DelayNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output DelayNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"delayTime: bpf or node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: DelayNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        description: \"Initial delayTime\"\n    }];\n    _ = { node: this.audioCtx.createDelay() };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.delayTime }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleArgs(this.args);\n        });\n        const handleArgs = (args: [number?]) => {\n            if (typeof args[0] === \"number\") {\n                try {\n                    this.node.delayTime.setValueAtTime(args[0], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        }\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node.delayTime, bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Destination extends WebAudioObject<AudioDestinationNode, {}, [Bang], [AudioDestinationNode]> {\n    static description = \"WebAudio DestinationNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output DestinationNode instance\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"Instance: DestinationNode\"\n    }];\n    _ = { node: this.audioCtx.destination };\n    inletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 1;\n            this.node.channelInterpretation = \"discrete\";\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(0, this.node);\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Gain extends WebAudioObject<GainNode, {}, [Bang, TBPF], [null, GainNode], [number]> {\n    static description = \"WebAudio GainNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output GainNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"gain: bpf or node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: GainNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        description: \"Initial gain\",\n        default: 1\n    }];\n    _ = { node: this.audioCtx.createGain() };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.gain }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleArgs(this.args);\n        });\n        const handleArgs = (args: [number?]) => {\n            if (typeof args[0] === \"number\") {\n                try {\n                    this.node.gain.setValueAtTime(args[0], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        }\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node.gain, bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { isNumberArray } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang, number[], number[]];\ntype A = [number[], number[]];\n\nexport default class IIRFilter extends WebAudioObject<IIRFilterNode, { feedforward: number[]; feedback: number[] }, I, [null, IIRFilterNode], A, {}> {\n    static description = \"WebAudio IIRFilterNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection (1 channel), bang to output IIRFilterNode instance\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"feedforward, A sequence of coefficients, change will reconstruct the node: number[]\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"feedback, A sequence of coefficients, change will reconstruct the node: number[]\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (1 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: IIRFilterNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"object\",\n        optional: false,\n        default: [],\n        description: \"feedforward, A sequence of coefficients: number[]\"\n    }, {\n        type: \"object\",\n        optional: false,\n        default: [],\n        description: \"feedback, A sequence of coefficients: number[]\"\n    }];\n    _ = { node: undefined as IIRFilterNode, feedforward: [] as number[], feedback: [] as number[] };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 3;\n            this.outlets = 2;\n            handleArgs(this.args);\n        });\n        const handleArgs = (args: Partial<A>) => {\n            if (isNumberArray(args[0])) this._.feedforward = args[0];\n            if (isNumberArray(args[1])) this._.feedback = args[1];\n            this.resetNode();\n        }\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                if (isNumberArray(data)) this._.feedforward = data;\n                this.resetNode();\n            } else if (inlet === 2) {\n                if (isNumberArray(data)) this._.feedback = data;\n                this.resetNode();\n            }\n        });\n    }\n    resetNode() {\n        this.disconnectAudio();\n        this.node = this.audioCtx.createIIRFilter(this._.feedforward, this._.feedback);\n        this.node.channelInterpretation = \"discrete\";\n        this.inletAudioConnections[0] = { node: this.node, index: 0 };\n        this.outletAudioConnections[0] = { node: this.node, index: 0 };\n        this.connectAudio();\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang | HTMLMediaElement];\nexport default class Media extends WebAudioObject<MediaElementAudioSourceNode, { element: HTMLMediaElement }, I, [null, MediaElementAudioSourceNode], [], {}> {\n    static description = \"WebAudio MediaElementAudioSourceNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"object\",\n        description: \"HTMLMediaElement to construct node, bang to output MediaElementAudioSourceNode instance\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: MediaElementAudioSourceNode\"\n    }];\n    _ = { node: undefined as MediaElementAudioSourceNode, element: undefined as HTMLMediaElement };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) {\n                    if (this.node) this.outlet(1, this.node);\n                } else if (data instanceof HTMLMediaElement) {\n                    this._.element = data;\n                    this.resetNode();\n                    this.outlet(1, this.node);\n                }\n            }\n        });\n    }\n    resetNode() {\n        this.disconnectAudio();\n        this.node = this.audioCtx.createMediaElementSource(this._.element);\n        this.node.channelInterpretation = \"discrete\";\n        this.outletAudioConnections[0] = { node: this.node, index: 0 };\n        this.connectAudio();\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Merger extends WebAudioObject<ChannelMergerNode, {}, [Bang | number, ...null[]], [null, ChannelMergerNode], [number]> {\n    static description = \"WebAudio ChannelMergerNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output DestinationNode instance, number to change inputs\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"Node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (n channels)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: ChannelMergerNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        description: \"Number of Inputs\",\n        default: 6\n    }];\n    _ = { node: null as ChannelMergerNode };\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.outlets = 2;\n            handleArgs(this.args);\n        });\n        const handleArgs = (args: [number?]) => {\n            const channelCount = (typeof args[0] === \"number\" && ~~args[0]) > 0 ? ~~args[0] : 6;\n            this.resetNode(channelCount);\n        }\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (typeof data === \"number\") {\n                    const channelCount = ~~data > 0 ? ~~data : 6;\n                    if (this.node && channelCount !== this.node.numberOfInputs) this.resetNode(channelCount);\n                    this.outlet(1, this.node);\n                } else if (isBang(data)) this.outlet(1, this.node);\n            }\n        });\n    }\n    resetNode(channelCount: number) {\n        this.disconnectAudio();\n        this.node = this.audioCtx.createChannelMerger(channelCount);\n        this.node.channelInterpretation = \"discrete\";\n        const factoryMeta = Merger.meta as this[\"meta\"];\n        const bangInlet = factoryMeta.inlets[0];\n        const siganlInlet = factoryMeta.inlets[1];\n        this.inletAudioConnections = [{ node: this.node, index: 0 }];\n        this.outletAudioConnections = [{ node: this.node, index: 0 }];\n        factoryMeta.inlets = [bangInlet];\n        for (let i = 1; i < channelCount; i++) {\n            factoryMeta.inlets[i] = siganlInlet;\n            this.inletAudioConnections[i] = { node: this.node, index: i };\n        }\n        this.setMeta(factoryMeta);\n        this.inlets = channelCount;\n        this.connectAudio();\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype A = [number, OscillatorType];\ninterface P {\n    detune: number;\n}\n\nexport default class Oscillator extends WebAudioObject<OscillatorNode, {}, [Bang, TBPF, TBPF, OscillatorType], [null, OscillatorNode], A, P> {\n    static description = \"WebAudio OscillatorNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Output OscillatorNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"frequency: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"detune: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"enum\",\n        enums: [\"sine\", \"square\", \"sawtooth\", \"triangle\", \"custom\"],\n        description: 'type: \"sine\" | \"square\" | \"sawtooth\" | \"triangle\" | \"custom\"'\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (1 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: OscillatorNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        default: 440,\n        description: \"Initial frequency\"\n    }, {\n        type: \"enum\",\n        enums: [\"sine\", \"square\", \"sawtooth\", \"triangle\", \"custom\"],\n        optional: true,\n        default: \"sine\",\n        description: 'Initial type: \"sine\" | \"square\" | \"sawtooth\" | \"triangle\" | \"custom\"'\n    }];\n    static props: IPropsMeta<P> = {\n        detune: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial detune\"\n        }\n    };\n    static isOscillatorType = (x: any): x is OscillatorType => x === \"sine\" || x === \"square\" || x === \"sawtooth\" || x === \"triangle\" || x === \"custom\";\n    _ = { node: this.audioCtx.createOscillator() };\n    inletAudioConnections = [null, { node: this.node.frequency }, { node: this.node.detune }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 4;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleProps(this.box.props);\n            handleArgs(this.args);\n            this.node.start();\n        });\n        const handleProps = (props: Partial<P>) => {\n            if (typeof props.detune === \"number\") {\n                try {\n                    this.node.detune.setValueAtTime(props.detune, this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        }\n        this.on(\"updateProps\", handleProps);\n        const handleArgs = (args: Partial<A>) => {\n            if (typeof args[0] === \"number\") {\n                try {\n                    this.node.frequency.setValueAtTime(args[0], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n            if (typeof args[1] === \"string\") {\n                try {\n                    this.node.type = args[1];\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        }\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else {\n                try {\n                    if (inlet === 1) {\n                        const bpf = decodeLine(data as TBPF);\n                        this.applyBPF(this.node.frequency, bpf);\n                    } else if (inlet === 2) {\n                        const bpf = decodeLine(data as TBPF);\n                        this.applyBPF(this.node.detune, bpf);\n                    } else if (inlet === 3) {\n                        this.node.type = data as OscillatorType;\n                    }\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang, TBPF, TBPF, TBPF, TBPF, TBPF, TBPF, PannerOptions];\nexport default class Panner extends WebAudioObject<PannerNode, {}, I, [null, PannerNode], [], PannerOptions> {\n    static description = \"WebAudio PannerNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output PannerNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"orientationX: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"orientationY: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"orientationZ: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"positionX: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"positionY: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"positionZ: bpf or node connection\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"options: coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (2 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: PannerNode\"\n    }];\n    static props: IPropsMeta<PannerOptions> = {\n        coneInnerAngle: {\n            type: \"number\",\n            default: 360,\n            description: \"Initial coneInnerAngle\"\n        },\n        coneOuterAngle: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial coneOuterAngle\"\n        },\n        coneOuterGain: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial coneOuterGain\"\n        },\n        distanceModel: {\n            type: \"enum\",\n            enums: [\"linear\", \"inverse\", \"exponential\"],\n            default: \"inverse\",\n            description: 'Initial distanceModel: \"linear\" | \"inverse\" | \"exponential\"'\n        },\n        maxDistance: {\n            type: \"number\",\n            default: 10000,\n            description: \"Initial maxDistance\"\n        },\n        orientationX: {\n            type: \"number\",\n            default: 1,\n            description: \"Initial orientationX\"\n        },\n        orientationY: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial orientationY\"\n        },\n        orientationZ: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial orientationZ\"\n        },\n        panningModel: {\n            type: \"enum\",\n            enums: [\"equalpower\", \"HRTF\"],\n            default: \"equalpower\",\n            description: 'Initial panningModel: \"equalpower\" | \"HRTF\"'\n        },\n        positionX: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial positionX\"\n        },\n        positionY: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial positionY\"\n        },\n        positionZ: {\n            type: \"number\",\n            default: 0,\n            description: \"Initial positionZ\"\n        },\n        refDistance: {\n            type: \"number\",\n            default: 1,\n            description: \"Initial refDistance\"\n        },\n        rolloffFactor: {\n            type: \"number\",\n            default: 1,\n            description: \"Initial rolloffFactor\"\n        }\n    };\n    _ = { node: this.audioCtx.createPanner() };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.orientationX }, { node: this.node.orientationY }, { node: this.node.orientationZ }, null, { node: this.node.positionX }, { node: this.node.positionY }, { node: this.node.positionZ }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 8;\n            this.outlets = 2;\n            handleProps(this.props);\n            this.node.channelInterpretation = \"discrete\";\n        });\n        const handleProps = (props: Partial<PannerOptions>) => {\n            const paramMap = [\"orientationX\", \"orientationY\", \"orientationZ\", \"positionX\", \"positionY\", \"positionZ\"] as const;\n            const numberParamMap = [\"coneInnerAngle\", \"coneOuterAngle\", \"coneOuterGain\", \"maxDistance\", \"refDistance\", \"rolloffFactor\"] as const;\n            try {\n                paramMap.forEach((key) => {\n                    if (typeof props[key] === \"number\") this.node[key].setValueAtTime(props[key], this.audioCtx.currentTime);\n                });\n                numberParamMap.forEach((key) => {\n                    if (typeof props[key] === \"number\") this.node[key] = props[key];\n                });\n                if (typeof props.distanceModel === \"string\") this.node.distanceModel = props.distanceModel;\n                if (typeof props.panningModel === \"string\") this.node.panningModel = props.panningModel;\n            } catch (e) {\n                this.error(e.message);\n            }\n        }\n        this.on(\"updateProps\", handleProps);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            const paramMap = [\"orientationX\", \"orientationY\", \"orientationZ\", \"positionX\", \"positionY\", \"positionZ\"] as const;\n            const numberParamMap = [\"coneInnerAngle\", \"coneOuterAngle\", \"coneOuterGain\", \"maxDistance\", \"refDistance\", \"rolloffFactor\"] as const;\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet > 0 && inlet < 7) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node[paramMap[inlet - 1]], bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            } else if (inlet === 7) {\n                if (typeof data === \"object\") {\n                    const props = data as PannerOptions;\n                    try {\n                        paramMap.forEach((key) => {\n                            if (typeof props[key] === \"number\") this.node[key].setValueAtTime(props[key], this.audioCtx.currentTime);\n                        });\n                        numberParamMap.forEach((key) => {\n                            if (typeof props[key] === \"number\") this.node[key] = props[key];\n                        });\n                        if (typeof props.distanceModel === \"string\") this.node.distanceModel = props.distanceModel;\n                        if (typeof props.panningModel === \"string\") this.node.panningModel = props.panningModel;\n                    } catch (e) {\n                        this.error(e.message);\n                    }\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class Splitter extends WebAudioObject<ChannelSplitterNode, {}, [Bang], (null | ChannelSplitterNode)[], [number]> {\n    static description = \"WebAudio ChannelSplitterNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output ChannelSplitterNode instance, number to change outputs\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection (1 channel)\"\n    }, {\n        type: \"object\",\n        description: \"Instance: ChannelSplitterNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        description: \"Number of Outputs\",\n        default: 6\n    }];\n    _ = { node: null as ChannelSplitterNode };\n    inletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            handleArgs(this.args);\n        });\n        const handleArgs = (args: [number?]) => {\n            const channelCount = (args && typeof args[0] === \"number\" && ~~args[0]) > 0 ? ~~args[0] : 6;\n            this.resetNode(channelCount);\n        };\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (typeof data === \"number\") {\n                    const channelCount = ~~data > 0 ? ~~data : 6;\n                    if (this.node && channelCount !== this.node.numberOfOutputs) this.resetNode(channelCount);\n                    this.outlet(this.outlets - 1, this.node);\n                } else if (isBang(data)) this.outlet(this.outlets - 1, this.node);\n            }\n        });\n    }\n    resetNode(channelCount: number) {\n        this.disconnectAudio();\n        this.node = this.audioCtx.createChannelSplitter(channelCount);\n        this.node.channelInterpretation = \"discrete\";\n        const factoryMeta = Splitter.meta as this[\"meta\"];\n        const signalOutlet = factoryMeta.outlets[0];\n        const nodeOutlet = factoryMeta.outlets[1];\n        this.inletAudioConnections = [{ node: this.node, index: 0 }];\n        this.outletAudioConnections = [];\n        for (let i = 0; i < channelCount; i++) {\n            factoryMeta.outlets[i] = signalOutlet;\n            this.outletAudioConnections[i] = { node: this.node, index: i };\n        }\n        factoryMeta.outlets[channelCount] = nodeOutlet;\n        this.setMeta(factoryMeta);\n        this.outlets = channelCount + 1;\n        this.connectAudio();\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport { decodeLine, TBPF } from \"../utils\";\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class StereoPanner extends WebAudioObject<StereoPannerNode, {}, [Bang, TBPF], [null, StereoPannerNode], [number]> {\n    static description = \"WebAudio StereoPannerNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output StereoPannerNode instance\"\n    }, {\n        isHot: false,\n        type: \"signal\",\n        description: \"pan: bpf or node connection\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: StereoPannerNode\"\n    }];\n    static args: IArgsMeta = [{\n        type: \"number\",\n        optional: true,\n        description: \"Initial pan\",\n        default: 0\n    }];\n    _ = { node: this.audioCtx.createStereoPanner() };\n    inletAudioConnections = [{ node: this.node, index: 0 }, { node: this.node.pan }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleArgs(this.args);\n        });\n        const handleArgs = (args: [number?]) => {\n            if (typeof args[0] === \"number\") {\n                try {\n                    this.node.pan.setValueAtTime(args[0], this.audioCtx.currentTime);\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        };\n        this.on(\"updateArgs\", handleArgs);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                try {\n                    const bpf = decodeLine(data as TBPF);\n                    this.applyBPF(this.node.pan, bpf);\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class StreamDest extends WebAudioObject<MediaStreamAudioDestinationNode, {}, [Bang], [MediaStreamAudioDestinationNode, MediaStream]> {\n    static description = \"WebAudio MediaStreamAudioDestinationNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output MediaStreamAudioDestinationNode instance with its stream\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"Instance: MediaStreamAudioDestinationNode\"\n    }, {\n        type: \"object\",\n        description: \"Stream\"\n    }];\n    _ = { node: this.audioCtx.createMediaStreamDestination() };\n    inletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outletAll([this.node, this.node.stream]);\n            }\n        });\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang | MediaStream];\nexport default class StreamSrc extends WebAudioObject<MediaStreamAudioSourceNode, { stream: MediaStream }, I, [null, MediaStreamAudioSourceNode], [], {}> {\n    static description = \"WebAudio MediaStreamAudioSourceNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"object\",\n        description: \"MediaStream to construct node, bang to output MediaStreamAudioSourceNode instance\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: MediaStreamAudioSourceNode\"\n    }];\n    _ = { node: undefined as MediaStreamAudioSourceNode, stream: undefined as MediaStream };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 1;\n            this.outlets = 2;\n        });\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (!isBang(data)) {\n                    this._.stream = data;\n                    this.resetNode();\n                }\n                if (this.node) this.outlet(1, this.node);\n            }\n        });\n    }\n    resetNode() {\n        this.disconnectAudio();\n        this.node = this.audioCtx.createMediaStreamSource(this._.stream);\n        this.node.channelInterpretation = \"discrete\";\n        this.outletAudioConnections[0] = { node: this.node, index: 0 };\n        this.connectAudio();\n    }\n}\n","import WebAudioObject from \"./base\";\nimport { Bang, isBang } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta, IPropsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\ntype I = [Bang, Float32Array, OverSampleType];\ninterface P {\n    oversample: OverSampleType;\n}\n\nexport default class WaveShaper extends WebAudioObject<WaveShaperNode, {}, I, [null, WaveShaperNode], [], P> {\n    static description = \"WebAudio WaveShaperNode\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"signal\",\n        description: \"Node connection, bang to output WaveShaperNode instance\"\n    }, {\n        isHot: false,\n        type: \"object\",\n        description: \"curve: Float32Array\"\n    }, {\n        isHot: false,\n        type: \"enum\",\n        enums: [\"none\", \"2x\", \"4x\"],\n        description: 'oversample: \"none\" | \"2x\" | \"4x\"'\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"signal\",\n        description: \"Node connection\"\n    }, {\n        type: \"object\",\n        description: \"Instance: WaveShaperNode\"\n    }];\n    static props: IPropsMeta<P> = {\n        oversample: {\n            type: \"enum\",\n            enums: [\"none\", \"2x\", \"4x\"],\n            default: \"none\",\n            description: \"Initial oversample\"\n        }\n    };\n    _ = { node: this.audioCtx.createWaveShaper() };\n    inletAudioConnections = [{ node: this.node, index: 0 }];\n    outletAudioConnections = [{ node: this.node, index: 0 }];\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 3;\n            this.outlets = 2;\n            this.node.channelInterpretation = \"discrete\";\n            handleProps(this.box.props);\n        });\n        const handleProps = (props: Partial<P>) => {\n            try {\n                if (typeof props.oversample === \"string\") this.node.oversample = props.oversample;\n            } catch (e) {\n                this.error(e.message);\n            }\n        }\n        this.on(\"updateProps\", handleProps);\n        this.on(\"inlet\", ({ data, inlet }) => {\n            if (inlet === 0) {\n                if (isBang(data)) this.outlet(1, this.node);\n            } else if (inlet === 1) {\n                try {\n                    if (data instanceof Float32Array) this.node.curve = data;\n                    else this.error(\"The curve is not a Float32Array.\");\n                } catch (e) {\n                    this.error(e.message);\n                }\n            } else if (inlet === 2) {\n                try {\n                    if (typeof data === \"string\") this.node.oversample = data as OverSampleType;\n                    else this.error(\"Incorrect oversample type.\");\n                } catch (e) {\n                    this.error(e.message);\n                }\n            }\n        });\n    }\n}\n","import { Bang, DefaultObject, isBang } from \"../sdk\";\r\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class audioContext extends DefaultObject<{}, {}, [Bang], [AudioContext]> {\r\n    static description = \"Get currrent patcher's audio context\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"bang\",\r\n        description: \"Output current audio context\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"object\",\r\n        description: \"Current audio context\"\r\n    }];\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (isBang(data)) this.outlet(0, this.patcher.audioCtx);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Bang, isBang, DefaultObject } from \"../sdk\";\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\n\nexport default class audioWorklet extends DefaultObject<{}, {}, [Bang, string], [AudioWorklet, Bang]> {\n    static description = \"Get currrent patcher's audio worklet from context\";\n    static inlets: IInletsMeta = [{\n        isHot: true,\n        type: \"bang\",\n        description: \"Output current audio worklet\"\n    }, {\n        isHot: true,\n        type: \"string\",\n        description: \"Code to add as module\"\n    }];\n    static outlets: IOutletsMeta = [{\n        type: \"object\",\n        description: \"Current audio worklet\"\n    }, {\n        type: \"bang\",\n        description: \"Output a bang while module is added\"\n    }];\n    audioWorklet: AudioWorklet;\n    handleInlet: (e: { data: any; inlet: number }) => Promise<void> = async ({ data, inlet }) => {\n        if (inlet === 0) {\n            if (isBang(data)) this.outlet(0, this.audioWorklet);\n        } else if (inlet === 1) {\n            if (typeof data === \"string\") {\n                try {\n                    const url = window.URL.createObjectURL(new Blob([data], { type: \"text/javascript\" }));\n                    await this.audioWorklet.addModule(url);\n                    this.outlet(1, new Bang());\n                } catch (e) {\n                    this.error((e as Error).message);\n                }\n            }\n        }\n    };\n    subscribe() {\n        super.subscribe();\n        this.on(\"preInit\", () => {\n            this.inlets = 2;\n            this.outlets = 2;\n            if (!this.patcher.audioCtx.audioWorklet) this.error(\"AudioWorklet not found.\");\n            else this.audioWorklet = this.patcher.audioCtx.audioWorklet;\n        });\n        this.on(\"inlet\", this.handleInlet);\n    }\n}\n","import { author, name, version, description } from \"../index\";\r\nimport { Bang, DefaultObject } from \"../sdk\";\r\n\r\nexport default class WebAudioObject<\r\n    T extends AudioNode = AudioNode,\r\n    S = {},\r\n    I extends [Bang | any, ...any[]] = [Bang],\r\n    O extends (null | any | T)[] = [],\r\n    A extends any[] = any[],\r\n    P = {}\r\n> extends DefaultObject<{}, S, I, O, A, P> {\r\n    static package = name;\r\n    static icon = \"volume up\";\r\n    static author = author;\r\n    static version = version;\r\n    static description = description;\r\n    _: Partial<{ node: T }> & Record<string, any>;\r\n    set node(nodeIn: T) {\r\n        this._.node = nodeIn;\r\n    }\r\n    get node() {\r\n        return this._.node;\r\n    }\r\n}\r\n","import * as JSON from \"../package.json\";\n\nexport default JSON;\n","import type { IJSPatcherSDK } from \"@jspatcher/jspatcher/src/core/SDK\";\r\n\r\nconst sdk = (globalThis as any).jspatcherEnv.sdk as IJSPatcherSDK;\r\nexport const {\r\n    React,\r\n    PatcherAudio,\r\n    Patcher,\r\n    Box,\r\n    Line,\r\n    BaseObject,\r\n    BaseUI,\r\n    DefaultObject,\r\n    DefaultUI,\r\n    generateRemotedObject,\r\n    generateDefaultObject,\r\n    generateRemoteObject,\r\n    Bang,\r\n    isBang\r\n} = sdk;\r\n\r\nexport interface Bang extends InstanceType<typeof Bang> {}\r\nexport interface PatcherAudio extends InstanceType<typeof PatcherAudio> {}\r\nexport interface Patcher extends InstanceType<typeof Patcher> {}\r\nexport interface Box extends InstanceType<typeof Box> {}\r\nexport interface Line extends InstanceType<typeof Line> {}\r\nexport interface BaseObject extends InstanceType<typeof BaseObject> {}\r\n","\r\nexport type TBPF = string | number | number[] | number[][];\r\nexport type TBPFPoint = [number, number, number];\r\nexport type TStrictBPF = TBPFPoint[];\r\n\r\nexport const isNumberArray = (x: any): x is number[] => Array.isArray(x) && x.every(e => typeof e === \"number\");\r\n\r\n/**\r\n * A BPF can be described as a succesion of three number tuples.\r\n * i.e. `1 1 0.5 2 1 1` curve mode means go to 0 immediately then go to 1 in 1s with a curve of e^0.5, then go to 2 in 1s linear.\r\n * The function transform the string to number[][], i.e. `[[1, 1, 0.5], [2, 1, 1]]`\r\n */\r\n export const decodeBPF = (sIn: TBPF, tupleLength: number): number[][] => {\r\n    if (typeof sIn === \"number\") return [[sIn]];\r\n    if (isNumberArray(sIn)) return [sIn];\r\n    if (Array.isArray(sIn) && sIn.every(a => isNumberArray(a))) return sIn;\r\n    if (typeof sIn !== \"string\") throw new Error(\"Failed to decode curve.\");\r\n    const numbers = sIn.split(\" \").filter(s => !!s).map(s => +s);\r\n    if (numbers.find(v => !isFinite(v))) throw new Error(\"BPF contains invalid number.\");\r\n    const tuples: number[][] = [];\r\n    for (let i = 0; i < numbers.length; i++) {\r\n        const $tuple = ~~(i / tupleLength);\r\n        const $ = i % tupleLength;\r\n        if (!tuples[$tuple]) tuples[$tuple] = [];\r\n        tuples[$tuple][$] = numbers[i];\r\n    }\r\n    return tuples;\r\n};\r\nexport const decodeCurve = (sIn: TBPF) => decodeBPF(sIn, 3);\r\nexport const decodeLine = (sIn: TBPF) => decodeBPF(sIn, 2);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import audioContext from \"./objects/audioContext\";\nimport audioWorklet from \"./objects/audioWorklet\";\nimport AnyNode from \"./objects/AnyNode\";\nimport Constant from \"./objects/Constant\";\nimport Oscillator from \"./objects/Oscillator\";\nimport Destination from \"./objects/Destination\";\nimport Splitter from \"./objects/Splitter\";\nimport Merger from \"./objects/Merger\";\nimport Gain from \"./objects/Gain\";\nimport Analyser from \"./objects/Analyser\";\nimport Biquad from \"./objects/Biquad\";\nimport Convolver from \"./objects/Convolver\";\nimport Delay from \"./objects/Delay\";\nimport Compressor from \"./objects/Compressor\";\nimport IIRFilter from \"./objects/IIRFilter\";\nimport Media from \"./objects/Media\";\nimport StreamDest from \"./objects/StreamDestination\";\nimport StreamSrc from \"./objects/StreamSource\";\nimport Panner from \"./objects/Panner\";\nimport StereoPanner from \"./objects/StereoPanner\";\nimport WaveShaper from \"./objects/WaveShaper\";\nimport AudioIn from \"./objects/AudioIn\";\nimport AudioOut from \"./objects/AudioOut\";\nimport BufferSrc from \"./objects/BufferSource\";\n\nexport default async () => ({\n    audioContext,\n    audioWorklet,\n    \"node~\": AnyNode,\n    \"constant~\": Constant,\n    \"oscillator~\": Oscillator,\n    \"gain~\": Gain,\n    \"destination~\": Destination,\n    \"splitter~\": Splitter,\n    \"merger~\": Merger,\n    \"analyser~\": Analyser,\n    \"biquad~\": Biquad,\n    \"convolver~\": Convolver,\n    \"delay~\": Delay,\n    \"compressor~\": Compressor,\n    \"iir~\": IIRFilter,\n    \"media~\": Media,\n    \"streamdest~\": StreamDest,\n    \"streamsrc~\": StreamSrc,\n    \"panner~\": Panner,\n    \"pan~\": StereoPanner,\n    \"waveshaper~\": WaveShaper,\n    \"audioIn~\": AudioIn,\n    \"audioOut~\": AudioOut,\n    \"plugin~\": Plugin,\n    \"bufferSource~\": BufferSrc,\n});"],"names":["packageInfo","name","split","pop","replace","author","license","keywords","version","description","jspatcher","WebAudioObject","isBang","Analyser","node","audioCtx","createAnalyser","index","subscribe","on","inlets","outlets","channelInterpretation","handleProps","box","props","fftSize","minDecibels","maxDecibels","smoothingTimeConstant","e","error","message","data","inlet","outlet","getFloatTimeDomainData","getByteTimeDomainData","getFloatFrequencyData","getByteFrequencyData","isHot","type","default","AnyNode","undefined","AudioNode","disconnectAudio","_","numberOfInputs","numberOfOutputs","factoryMeta","meta","inlet0","inlet1","outlet0","inletAudioConnections","i","outletAudioConnections","setMeta","connectAudio","handleInlet","AudioIn","stream","search","devices","navigator","mediaDevices","enumerateDevices","enums","filter","d","kind","map","label","deviceId","args","device","find","getUserMedia","audio","getConstraints","resetNode","addEventListener","handleDeviceChange","newSearch","removeEventListener","autoGainControl","getProp","channelCount","echoCancellation","latency","noiseSuppression","sampleRate","sampleSize","createMediaStreamSource","optional","React","DefaultUI","supportSetSinkId","window","MediaStreamAudioDestinationNode","HTMLMediaElement","prototype","setSinkId","AudioOut","destination","msadn","createMediaStreamDestination","Audio","sinkId","played","pause","play","srcObject","src","URL","createObjectURL","AudioOutUI","createRef","componentDidMount","div","refContainer","current","object","style","display","appendChild","render","textContainerProps","ref","decodeLine","Biquad","createBiquadFilter","frequency","detune","Q","gain","paramMap","forEach","key","setValueAtTime","currentTime","isBiquadFilterType","bpf","applyBPF","x","indexOf","Bang","PatcherAudio","BufferSrc","createBufferSource","playing","playbackRate","handleEnded","numberParamMap","booleanParamMap","start","stop","AudioBuffer","buffer","audioBuffer","loop","loopStart","loopEnd","bufferIn","value","Compressor","createDynamicsCompressor","threshold","knee","ratio","attack","release","Constant","createConstantSource","offset","handleArgs","Convolver","createConvolver","normalize","Delay","createDelay","delayTime","Destination","Gain","createGain","isNumberArray","IIRFilter","feedforward","feedback","createIIRFilter","Media","element","createMediaElementSource","Merger","createChannelMerger","bangInlet","siganlInlet","Oscillator","createOscillator","Panner","createPanner","orientationX","orientationY","orientationZ","positionX","positionY","positionZ","distanceModel","panningModel","coneInnerAngle","coneOuterAngle","coneOuterGain","maxDistance","refDistance","rolloffFactor","Splitter","createChannelSplitter","signalOutlet","nodeOutlet","StereoPanner","createStereoPanner","pan","StreamDest","outletAll","StreamSrc","WaveShaper","createWaveShaper","oversample","Float32Array","curve","DefaultObject","audioContext","patcher","audioWorklet","url","Blob","addModule","nodeIn","JSON","sdk","globalThis","jspatcherEnv","Patcher","Box","Line","BaseObject","BaseUI","generateRemotedObject","generateDefaultObject","generateRemoteObject","Array","isArray","every","decodeBPF","sIn","tupleLength","a","Error","numbers","s","v","isFinite","tuples","length","$tuple","$","decodeCurve","Plugin"],"sourceRoot":""}